# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Publish Latest

on:
  push:
    branches: 
    - main
  pull_request:
    branches: 
    - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: chriswrwx/grafana
  IMAGE_TAG: latest
  
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
      - run: npm run build --if-present

      # # Login against a Docker registry except on PR
      # # https://github.com/docker/login-action
      # - name: Log into registry ${{ env.REGISTRY }}
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
          
      # # Extract metadata (tags, labels) for Docker
      # # https://github.com/docker/metadata-action
      # - name: Extract Docker metadata
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          
      # # Build and push Docker image with Buildx (don't push on PR)
      # # https://github.com/docker/build-push-action
      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
      #     labels: ${{ steps.meta.outputs.labels }}
